// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GOBusinessData/GOBusinessData.proto

#ifndef PROTOBUF_GOBusinessData_2fGOBusinessData_2eproto__INCLUDED
#define PROTOBUF_GOBusinessData_2fGOBusinessData_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_GOBusinessData_2fGOBusinessData_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGOBusinessDataImpl();
void InitDefaultsGOBusinessData();
inline void InitDefaults() {
  InitDefaultsGOBusinessData();
}
}  // namespace protobuf_GOBusinessData_2fGOBusinessData_2eproto
namespace DJIFRProto {
namespace Standard {
class GOBusinessData;
class GOBusinessDataDefaultTypeInternal;
extern GOBusinessDataDefaultTypeInternal _GOBusinessData_default_instance_;
}  // namespace Standard
}  // namespace DJIFRProto
namespace DJIFRProto {
namespace Standard {

// ===================================================================

class GOBusinessData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DJIFRProto.Standard.GOBusinessData) */ {
 public:
  GOBusinessData();
  virtual ~GOBusinessData();

  GOBusinessData(const GOBusinessData& from);

  inline GOBusinessData& operator=(const GOBusinessData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GOBusinessData(GOBusinessData&& from) noexcept
    : GOBusinessData() {
    *this = ::std::move(from);
  }

  inline GOBusinessData& operator=(GOBusinessData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GOBusinessData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GOBusinessData* internal_default_instance() {
    return reinterpret_cast<const GOBusinessData*>(
               &_GOBusinessData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GOBusinessData* other);
  friend void swap(GOBusinessData& a, GOBusinessData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GOBusinessData* New() const PROTOBUF_FINAL { return New(NULL); }

  GOBusinessData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GOBusinessData& from);
  void MergeFrom(const GOBusinessData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GOBusinessData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string tips = 2;
  void clear_tips();
  static const int kTipsFieldNumber = 2;
  const ::std::string& tips() const;
  void set_tips(const ::std::string& value);
  #if LANG_CXX11
  void set_tips(::std::string&& value);
  #endif
  void set_tips(const char* value);
  void set_tips(const char* value, size_t size);
  ::std::string* mutable_tips();
  ::std::string* release_tips();
  void set_allocated_tips(::std::string* tips);

  // string warning = 3;
  void clear_warning();
  static const int kWarningFieldNumber = 3;
  const ::std::string& warning() const;
  void set_warning(const ::std::string& value);
  #if LANG_CXX11
  void set_warning(::std::string&& value);
  #endif
  void set_warning(const char* value);
  void set_warning(const char* value, size_t size);
  ::std::string* mutable_warning();
  ::std::string* release_warning();
  void set_allocated_warning(::std::string* warning);

  // string seriousWarning = 4;
  void clear_seriouswarning();
  static const int kSeriousWarningFieldNumber = 4;
  const ::std::string& seriouswarning() const;
  void set_seriouswarning(const ::std::string& value);
  #if LANG_CXX11
  void set_seriouswarning(::std::string&& value);
  #endif
  void set_seriouswarning(const char* value);
  void set_seriouswarning(const char* value, size_t size);
  ::std::string* mutable_seriouswarning();
  ::std::string* release_seriouswarning();
  void set_allocated_seriouswarning(::std::string* seriouswarning);

  // bytes goBusinessData = 5;
  void clear_gobusinessdata();
  static const int kGoBusinessDataFieldNumber = 5;
  const ::std::string& gobusinessdata() const;
  void set_gobusinessdata(const ::std::string& value);
  #if LANG_CXX11
  void set_gobusinessdata(::std::string&& value);
  #endif
  void set_gobusinessdata(const char* value);
  void set_gobusinessdata(const void* value, size_t size);
  ::std::string* mutable_gobusinessdata();
  ::std::string* release_gobusinessdata();
  void set_allocated_gobusinessdata(::std::string* gobusinessdata);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:DJIFRProto.Standard.GOBusinessData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr tips_;
  ::google::protobuf::internal::ArenaStringPtr warning_;
  ::google::protobuf::internal::ArenaStringPtr seriouswarning_;
  ::google::protobuf::internal::ArenaStringPtr gobusinessdata_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct ::protobuf_GOBusinessData_2fGOBusinessData_2eproto::TableStruct;
  friend void ::protobuf_GOBusinessData_2fGOBusinessData_2eproto::InitDefaultsGOBusinessDataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GOBusinessData

// uint32 version = 1;
inline void GOBusinessData::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 GOBusinessData::version() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.GOBusinessData.version)
  return version_;
}
inline void GOBusinessData::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.GOBusinessData.version)
}

// string tips = 2;
inline void GOBusinessData::clear_tips() {
  tips_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GOBusinessData::tips() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.GOBusinessData.tips)
  return tips_.GetNoArena();
}
inline void GOBusinessData::set_tips(const ::std::string& value) {
  
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.GOBusinessData.tips)
}
#if LANG_CXX11
inline void GOBusinessData::set_tips(::std::string&& value) {
  
  tips_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DJIFRProto.Standard.GOBusinessData.tips)
}
#endif
inline void GOBusinessData::set_tips(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DJIFRProto.Standard.GOBusinessData.tips)
}
inline void GOBusinessData::set_tips(const char* value, size_t size) {
  
  tips_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DJIFRProto.Standard.GOBusinessData.tips)
}
inline ::std::string* GOBusinessData::mutable_tips() {
  
  // @@protoc_insertion_point(field_mutable:DJIFRProto.Standard.GOBusinessData.tips)
  return tips_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GOBusinessData::release_tips() {
  // @@protoc_insertion_point(field_release:DJIFRProto.Standard.GOBusinessData.tips)
  
  return tips_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GOBusinessData::set_allocated_tips(::std::string* tips) {
  if (tips != NULL) {
    
  } else {
    
  }
  tips_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tips);
  // @@protoc_insertion_point(field_set_allocated:DJIFRProto.Standard.GOBusinessData.tips)
}

// string warning = 3;
inline void GOBusinessData::clear_warning() {
  warning_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GOBusinessData::warning() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.GOBusinessData.warning)
  return warning_.GetNoArena();
}
inline void GOBusinessData::set_warning(const ::std::string& value) {
  
  warning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.GOBusinessData.warning)
}
#if LANG_CXX11
inline void GOBusinessData::set_warning(::std::string&& value) {
  
  warning_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DJIFRProto.Standard.GOBusinessData.warning)
}
#endif
inline void GOBusinessData::set_warning(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  warning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DJIFRProto.Standard.GOBusinessData.warning)
}
inline void GOBusinessData::set_warning(const char* value, size_t size) {
  
  warning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DJIFRProto.Standard.GOBusinessData.warning)
}
inline ::std::string* GOBusinessData::mutable_warning() {
  
  // @@protoc_insertion_point(field_mutable:DJIFRProto.Standard.GOBusinessData.warning)
  return warning_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GOBusinessData::release_warning() {
  // @@protoc_insertion_point(field_release:DJIFRProto.Standard.GOBusinessData.warning)
  
  return warning_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GOBusinessData::set_allocated_warning(::std::string* warning) {
  if (warning != NULL) {
    
  } else {
    
  }
  warning_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), warning);
  // @@protoc_insertion_point(field_set_allocated:DJIFRProto.Standard.GOBusinessData.warning)
}

// string seriousWarning = 4;
inline void GOBusinessData::clear_seriouswarning() {
  seriouswarning_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GOBusinessData::seriouswarning() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.GOBusinessData.seriousWarning)
  return seriouswarning_.GetNoArena();
}
inline void GOBusinessData::set_seriouswarning(const ::std::string& value) {
  
  seriouswarning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.GOBusinessData.seriousWarning)
}
#if LANG_CXX11
inline void GOBusinessData::set_seriouswarning(::std::string&& value) {
  
  seriouswarning_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DJIFRProto.Standard.GOBusinessData.seriousWarning)
}
#endif
inline void GOBusinessData::set_seriouswarning(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  seriouswarning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DJIFRProto.Standard.GOBusinessData.seriousWarning)
}
inline void GOBusinessData::set_seriouswarning(const char* value, size_t size) {
  
  seriouswarning_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DJIFRProto.Standard.GOBusinessData.seriousWarning)
}
inline ::std::string* GOBusinessData::mutable_seriouswarning() {
  
  // @@protoc_insertion_point(field_mutable:DJIFRProto.Standard.GOBusinessData.seriousWarning)
  return seriouswarning_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GOBusinessData::release_seriouswarning() {
  // @@protoc_insertion_point(field_release:DJIFRProto.Standard.GOBusinessData.seriousWarning)
  
  return seriouswarning_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GOBusinessData::set_allocated_seriouswarning(::std::string* seriouswarning) {
  if (seriouswarning != NULL) {
    
  } else {
    
  }
  seriouswarning_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), seriouswarning);
  // @@protoc_insertion_point(field_set_allocated:DJIFRProto.Standard.GOBusinessData.seriousWarning)
}

// bytes goBusinessData = 5;
inline void GOBusinessData::clear_gobusinessdata() {
  gobusinessdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GOBusinessData::gobusinessdata() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.GOBusinessData.goBusinessData)
  return gobusinessdata_.GetNoArena();
}
inline void GOBusinessData::set_gobusinessdata(const ::std::string& value) {
  
  gobusinessdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.GOBusinessData.goBusinessData)
}
#if LANG_CXX11
inline void GOBusinessData::set_gobusinessdata(::std::string&& value) {
  
  gobusinessdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:DJIFRProto.Standard.GOBusinessData.goBusinessData)
}
#endif
inline void GOBusinessData::set_gobusinessdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  gobusinessdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:DJIFRProto.Standard.GOBusinessData.goBusinessData)
}
inline void GOBusinessData::set_gobusinessdata(const void* value, size_t size) {
  
  gobusinessdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:DJIFRProto.Standard.GOBusinessData.goBusinessData)
}
inline ::std::string* GOBusinessData::mutable_gobusinessdata() {
  
  // @@protoc_insertion_point(field_mutable:DJIFRProto.Standard.GOBusinessData.goBusinessData)
  return gobusinessdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GOBusinessData::release_gobusinessdata() {
  // @@protoc_insertion_point(field_release:DJIFRProto.Standard.GOBusinessData.goBusinessData)
  
  return gobusinessdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GOBusinessData::set_allocated_gobusinessdata(::std::string* gobusinessdata) {
  if (gobusinessdata != NULL) {
    
  } else {
    
  }
  gobusinessdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gobusinessdata);
  // @@protoc_insertion_point(field_set_allocated:DJIFRProto.Standard.GOBusinessData.goBusinessData)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Standard
}  // namespace DJIFRProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GOBusinessData_2fGOBusinessData_2eproto__INCLUDED
