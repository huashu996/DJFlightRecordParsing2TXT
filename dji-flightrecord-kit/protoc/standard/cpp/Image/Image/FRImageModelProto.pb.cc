// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Image/FRImageModelProto.proto

#include "Image/FRImageModelProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace DJIFRProto {
namespace Standard {
class ImageDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageData>
      _instance;
} _ImageData_default_instance_;
class ImageDatasDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageDatas>
      _instance;
} _ImageDatas_default_instance_;
}  // namespace Standard
}  // namespace DJIFRProto
namespace protobuf_Image_2fFRImageModelProto_2eproto {
void InitDefaultsImageDataImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Common_2fFRCommonModelProto_2eproto::InitDefaultsLocationCoordinate2D();
  {
    void* ptr = &::DJIFRProto::Standard::_ImageData_default_instance_;
    new (ptr) ::DJIFRProto::Standard::ImageData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DJIFRProto::Standard::ImageData::InitAsDefaultInstance();
}

void InitDefaultsImageData() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageDataImpl);
}

void InitDefaultsImageDatasImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Image_2fFRImageModelProto_2eproto::InitDefaultsImageData();
  {
    void* ptr = &::DJIFRProto::Standard::_ImageDatas_default_instance_;
    new (ptr) ::DJIFRProto::Standard::ImageDatas();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DJIFRProto::Standard::ImageDatas::InitAsDefaultInstance();
}

void InitDefaultsImageDatas() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsImageDatasImpl);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::ImageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::ImageData, coordinate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::ImageData, previewimage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::ImageData, thumbnail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::ImageDatas, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::ImageDatas, images_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DJIFRProto::Standard::ImageData)},
  { 8, -1, sizeof(::DJIFRProto::Standard::ImageDatas)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DJIFRProto::Standard::_ImageData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::DJIFRProto::Standard::_ImageDatas_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Image/FRImageModelProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\035Image/FRImageModelProto.proto\022\023DJIFRPr"
      "oto.Standard\032\037Common/FRCommonModelProto."
      "proto\"s\n\tImageData\022=\n\ncoordinate\030\001 \001(\0132)"
      ".DJIFRProto.Standard.LocationCoordinate2"
      "D\022\024\n\014previewImage\030\002 \001(\014\022\021\n\tthumbnail\030\003 \001"
      "(\014\"<\n\nImageDatas\022.\n\006images\030\001 \003(\0132\036.DJIFR"
      "Proto.Standard.ImageDataB\r\242\002\nDJIFRProtob"
      "\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 287);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Image/FRImageModelProto.proto", &protobuf_RegisterTypes);
  ::protobuf_Common_2fFRCommonModelProto_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Image_2fFRImageModelProto_2eproto
namespace DJIFRProto {
namespace Standard {

// ===================================================================

void ImageData::InitAsDefaultInstance() {
  ::DJIFRProto::Standard::_ImageData_default_instance_._instance.get_mutable()->coordinate_ = const_cast< ::DJIFRProto::Standard::LocationCoordinate2D*>(
      ::DJIFRProto::Standard::LocationCoordinate2D::internal_default_instance());
}
void ImageData::clear_coordinate() {
  if (GetArenaNoVirtual() == NULL && coordinate_ != NULL) {
    delete coordinate_;
  }
  coordinate_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageData::kCoordinateFieldNumber;
const int ImageData::kPreviewImageFieldNumber;
const int ImageData::kThumbnailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageData::ImageData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Image_2fFRImageModelProto_2eproto::InitDefaultsImageData();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DJIFRProto.Standard.ImageData)
}
ImageData::ImageData(const ImageData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  previewimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.previewimage().size() > 0) {
    previewimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previewimage_);
  }
  thumbnail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumbnail().size() > 0) {
    thumbnail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_);
  }
  if (from.has_coordinate()) {
    coordinate_ = new ::DJIFRProto::Standard::LocationCoordinate2D(*from.coordinate_);
  } else {
    coordinate_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:DJIFRProto.Standard.ImageData)
}

void ImageData::SharedCtor() {
  previewimage_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coordinate_ = NULL;
  _cached_size_ = 0;
}

ImageData::~ImageData() {
  // @@protoc_insertion_point(destructor:DJIFRProto.Standard.ImageData)
  SharedDtor();
}

void ImageData::SharedDtor() {
  previewimage_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete coordinate_;
}

void ImageData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageData::descriptor() {
  ::protobuf_Image_2fFRImageModelProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Image_2fFRImageModelProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageData& ImageData::default_instance() {
  ::protobuf_Image_2fFRImageModelProto_2eproto::InitDefaultsImageData();
  return *internal_default_instance();
}

ImageData* ImageData::New(::google::protobuf::Arena* arena) const {
  ImageData* n = new ImageData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageData::Clear() {
// @@protoc_insertion_point(message_clear_start:DJIFRProto.Standard.ImageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  previewimage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbnail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && coordinate_ != NULL) {
    delete coordinate_;
  }
  coordinate_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DJIFRProto.Standard.ImageData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .DJIFRProto.Standard.LocationCoordinate2D coordinate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_coordinate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes previewImage = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_previewimage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes thumbnail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_thumbnail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DJIFRProto.Standard.ImageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DJIFRProto.Standard.ImageData)
  return false;
#undef DO_
}

void ImageData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DJIFRProto.Standard.ImageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DJIFRProto.Standard.LocationCoordinate2D coordinate = 1;
  if (this->has_coordinate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->coordinate_, output);
  }

  // bytes previewImage = 2;
  if (this->previewimage().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->previewimage(), output);
  }

  // bytes thumbnail = 3;
  if (this->thumbnail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->thumbnail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DJIFRProto.Standard.ImageData)
}

::google::protobuf::uint8* ImageData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DJIFRProto.Standard.ImageData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .DJIFRProto.Standard.LocationCoordinate2D coordinate = 1;
  if (this->has_coordinate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->coordinate_, deterministic, target);
  }

  // bytes previewImage = 2;
  if (this->previewimage().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->previewimage(), target);
  }

  // bytes thumbnail = 3;
  if (this->thumbnail().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->thumbnail(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DJIFRProto.Standard.ImageData)
  return target;
}

size_t ImageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DJIFRProto.Standard.ImageData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes previewImage = 2;
  if (this->previewimage().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->previewimage());
  }

  // bytes thumbnail = 3;
  if (this->thumbnail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->thumbnail());
  }

  // .DJIFRProto.Standard.LocationCoordinate2D coordinate = 1;
  if (this->has_coordinate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->coordinate_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DJIFRProto.Standard.ImageData)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DJIFRProto.Standard.ImageData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DJIFRProto.Standard.ImageData)
    MergeFrom(*source);
  }
}

void ImageData::MergeFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DJIFRProto.Standard.ImageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.previewimage().size() > 0) {

    previewimage_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.previewimage_);
  }
  if (from.thumbnail().size() > 0) {

    thumbnail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbnail_);
  }
  if (from.has_coordinate()) {
    mutable_coordinate()->::DJIFRProto::Standard::LocationCoordinate2D::MergeFrom(from.coordinate());
  }
}

void ImageData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DJIFRProto.Standard.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageData::CopyFrom(const ImageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DJIFRProto.Standard.ImageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageData::IsInitialized() const {
  return true;
}

void ImageData::Swap(ImageData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageData::InternalSwap(ImageData* other) {
  using std::swap;
  previewimage_.Swap(&other->previewimage_);
  thumbnail_.Swap(&other->thumbnail_);
  swap(coordinate_, other->coordinate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageData::GetMetadata() const {
  protobuf_Image_2fFRImageModelProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Image_2fFRImageModelProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageDatas::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageDatas::kImagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageDatas::ImageDatas()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Image_2fFRImageModelProto_2eproto::InitDefaultsImageDatas();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DJIFRProto.Standard.ImageDatas)
}
ImageDatas::ImageDatas(const ImageDatas& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:DJIFRProto.Standard.ImageDatas)
}

void ImageDatas::SharedCtor() {
  _cached_size_ = 0;
}

ImageDatas::~ImageDatas() {
  // @@protoc_insertion_point(destructor:DJIFRProto.Standard.ImageDatas)
  SharedDtor();
}

void ImageDatas::SharedDtor() {
}

void ImageDatas::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageDatas::descriptor() {
  ::protobuf_Image_2fFRImageModelProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Image_2fFRImageModelProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageDatas& ImageDatas::default_instance() {
  ::protobuf_Image_2fFRImageModelProto_2eproto::InitDefaultsImageDatas();
  return *internal_default_instance();
}

ImageDatas* ImageDatas::New(::google::protobuf::Arena* arena) const {
  ImageDatas* n = new ImageDatas;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageDatas::Clear() {
// @@protoc_insertion_point(message_clear_start:DJIFRProto.Standard.ImageDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  images_.Clear();
  _internal_metadata_.Clear();
}

bool ImageDatas::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DJIFRProto.Standard.ImageDatas)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .DJIFRProto.Standard.ImageData images = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DJIFRProto.Standard.ImageDatas)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DJIFRProto.Standard.ImageDatas)
  return false;
#undef DO_
}

void ImageDatas::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DJIFRProto.Standard.ImageDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DJIFRProto.Standard.ImageData images = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->images(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DJIFRProto.Standard.ImageDatas)
}

::google::protobuf::uint8* ImageDatas::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DJIFRProto.Standard.ImageDatas)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .DJIFRProto.Standard.ImageData images = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->images_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->images(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DJIFRProto.Standard.ImageDatas)
  return target;
}

size_t ImageDatas::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DJIFRProto.Standard.ImageDatas)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .DJIFRProto.Standard.ImageData images = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->images_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->images(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageDatas::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DJIFRProto.Standard.ImageDatas)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageDatas* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageDatas>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DJIFRProto.Standard.ImageDatas)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DJIFRProto.Standard.ImageDatas)
    MergeFrom(*source);
  }
}

void ImageDatas::MergeFrom(const ImageDatas& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DJIFRProto.Standard.ImageDatas)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
}

void ImageDatas::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DJIFRProto.Standard.ImageDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageDatas::CopyFrom(const ImageDatas& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DJIFRProto.Standard.ImageDatas)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageDatas::IsInitialized() const {
  return true;
}

void ImageDatas::Swap(ImageDatas* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageDatas::InternalSwap(ImageDatas* other) {
  using std::swap;
  images_.InternalSwap(&other->images_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageDatas::GetMetadata() const {
  protobuf_Image_2fFRImageModelProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Image_2fFRImageModelProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Standard
}  // namespace DJIFRProto

// @@protoc_insertion_point(global_scope)
