// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MobileDeviceState/MobileDeviceState.proto

#ifndef PROTOBUF_MobileDeviceState_2fMobileDeviceState_2eproto__INCLUDED
#define PROTOBUF_MobileDeviceState_2fMobileDeviceState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Common/FRCommonModelProto.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_MobileDeviceState_2fMobileDeviceState_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMobileDeviceStateImpl();
void InitDefaultsMobileDeviceState();
inline void InitDefaults() {
  InitDefaultsMobileDeviceState();
}
}  // namespace protobuf_MobileDeviceState_2fMobileDeviceState_2eproto
namespace DJIFRProto {
namespace Standard {
class MobileDeviceState;
class MobileDeviceStateDefaultTypeInternal;
extern MobileDeviceStateDefaultTypeInternal _MobileDeviceState_default_instance_;
}  // namespace Standard
}  // namespace DJIFRProto
namespace DJIFRProto {
namespace Standard {

// ===================================================================

class MobileDeviceState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:DJIFRProto.Standard.MobileDeviceState) */ {
 public:
  MobileDeviceState();
  virtual ~MobileDeviceState();

  MobileDeviceState(const MobileDeviceState& from);

  inline MobileDeviceState& operator=(const MobileDeviceState& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MobileDeviceState(MobileDeviceState&& from) noexcept
    : MobileDeviceState() {
    *this = ::std::move(from);
  }

  inline MobileDeviceState& operator=(MobileDeviceState&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MobileDeviceState& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MobileDeviceState* internal_default_instance() {
    return reinterpret_cast<const MobileDeviceState*>(
               &_MobileDeviceState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MobileDeviceState* other);
  friend void swap(MobileDeviceState& a, MobileDeviceState& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MobileDeviceState* New() const PROTOBUF_FINAL { return New(NULL); }

  MobileDeviceState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MobileDeviceState& from);
  void MergeFrom(const MobileDeviceState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MobileDeviceState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .DJIFRProto.Standard.LocationCoordinate2D coordinate = 1;
  bool has_coordinate() const;
  void clear_coordinate();
  static const int kCoordinateFieldNumber = 1;
  const ::DJIFRProto::Standard::LocationCoordinate2D& coordinate() const;
  ::DJIFRProto::Standard::LocationCoordinate2D* release_coordinate();
  ::DJIFRProto::Standard::LocationCoordinate2D* mutable_coordinate();
  void set_allocated_coordinate(::DJIFRProto::Standard::LocationCoordinate2D* coordinate);

  // double horizontalAccuracy = 2;
  void clear_horizontalaccuracy();
  static const int kHorizontalAccuracyFieldNumber = 2;
  double horizontalaccuracy() const;
  void set_horizontalaccuracy(double value);

  // @@protoc_insertion_point(class_scope:DJIFRProto.Standard.MobileDeviceState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::DJIFRProto::Standard::LocationCoordinate2D* coordinate_;
  double horizontalaccuracy_;
  mutable int _cached_size_;
  friend struct ::protobuf_MobileDeviceState_2fMobileDeviceState_2eproto::TableStruct;
  friend void ::protobuf_MobileDeviceState_2fMobileDeviceState_2eproto::InitDefaultsMobileDeviceStateImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MobileDeviceState

// .DJIFRProto.Standard.LocationCoordinate2D coordinate = 1;
inline bool MobileDeviceState::has_coordinate() const {
  return this != internal_default_instance() && coordinate_ != NULL;
}
inline const ::DJIFRProto::Standard::LocationCoordinate2D& MobileDeviceState::coordinate() const {
  const ::DJIFRProto::Standard::LocationCoordinate2D* p = coordinate_;
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.MobileDeviceState.coordinate)
  return p != NULL ? *p : *reinterpret_cast<const ::DJIFRProto::Standard::LocationCoordinate2D*>(
      &::DJIFRProto::Standard::_LocationCoordinate2D_default_instance_);
}
inline ::DJIFRProto::Standard::LocationCoordinate2D* MobileDeviceState::release_coordinate() {
  // @@protoc_insertion_point(field_release:DJIFRProto.Standard.MobileDeviceState.coordinate)
  
  ::DJIFRProto::Standard::LocationCoordinate2D* temp = coordinate_;
  coordinate_ = NULL;
  return temp;
}
inline ::DJIFRProto::Standard::LocationCoordinate2D* MobileDeviceState::mutable_coordinate() {
  
  if (coordinate_ == NULL) {
    coordinate_ = new ::DJIFRProto::Standard::LocationCoordinate2D;
  }
  // @@protoc_insertion_point(field_mutable:DJIFRProto.Standard.MobileDeviceState.coordinate)
  return coordinate_;
}
inline void MobileDeviceState::set_allocated_coordinate(::DJIFRProto::Standard::LocationCoordinate2D* coordinate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(coordinate_);
  }
  if (coordinate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      coordinate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, coordinate, submessage_arena);
    }
    
  } else {
    
  }
  coordinate_ = coordinate;
  // @@protoc_insertion_point(field_set_allocated:DJIFRProto.Standard.MobileDeviceState.coordinate)
}

// double horizontalAccuracy = 2;
inline void MobileDeviceState::clear_horizontalaccuracy() {
  horizontalaccuracy_ = 0;
}
inline double MobileDeviceState::horizontalaccuracy() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.MobileDeviceState.horizontalAccuracy)
  return horizontalaccuracy_;
}
inline void MobileDeviceState::set_horizontalaccuracy(double value) {
  
  horizontalaccuracy_ = value;
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.MobileDeviceState.horizontalAccuracy)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Standard
}  // namespace DJIFRProto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_MobileDeviceState_2fMobileDeviceState_2eproto__INCLUDED
