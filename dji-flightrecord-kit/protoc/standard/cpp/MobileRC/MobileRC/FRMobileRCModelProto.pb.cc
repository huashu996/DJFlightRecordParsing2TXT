// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MobileRC/FRMobileRCModelProto.proto

#include "MobileRC/FRMobileRCModelProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace DJIFRProto {
namespace Standard {
class MobileRemoteControllerStateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MobileRemoteControllerState>
      _instance;
} _MobileRemoteControllerState_default_instance_;
}  // namespace Standard
}  // namespace DJIFRProto
namespace protobuf_MobileRC_2fFRMobileRCModelProto_2eproto {
void InitDefaultsMobileRemoteControllerStateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::DJIFRProto::Standard::_MobileRemoteControllerState_default_instance_;
    new (ptr) ::DJIFRProto::Standard::MobileRemoteControllerState();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::DJIFRProto::Standard::MobileRemoteControllerState::InitAsDefaultInstance();
}

void InitDefaultsMobileRemoteControllerState() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMobileRemoteControllerStateImpl);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::MobileRemoteControllerState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::MobileRemoteControllerState, leftstickvertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::MobileRemoteControllerState, leftstickhorizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::MobileRemoteControllerState, rightstickvertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::DJIFRProto::Standard::MobileRemoteControllerState, rightstickhorizontal_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::DJIFRProto::Standard::MobileRemoteControllerState)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::DJIFRProto::Standard::_MobileRemoteControllerState_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "MobileRC/FRMobileRCModelProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#MobileRC/FRMobileRCModelProto.proto\022\023D"
      "JIFRProto.Standard\"\217\001\n\033MobileRemoteContr"
      "ollerState\022\031\n\021leftStickVertical\030\001 \001(\002\022\033\n"
      "\023leftStickHorizontal\030\002 \001(\002\022\032\n\022rightStick"
      "Vertical\030\003 \001(\002\022\034\n\024rightStickHorizontal\030\004"
      " \001(\002B\r\242\002\nDJIFRProtob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 227);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MobileRC/FRMobileRCModelProto.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_MobileRC_2fFRMobileRCModelProto_2eproto
namespace DJIFRProto {
namespace Standard {

// ===================================================================

void MobileRemoteControllerState::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MobileRemoteControllerState::kLeftStickVerticalFieldNumber;
const int MobileRemoteControllerState::kLeftStickHorizontalFieldNumber;
const int MobileRemoteControllerState::kRightStickVerticalFieldNumber;
const int MobileRemoteControllerState::kRightStickHorizontalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MobileRemoteControllerState::MobileRemoteControllerState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_MobileRC_2fFRMobileRCModelProto_2eproto::InitDefaultsMobileRemoteControllerState();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:DJIFRProto.Standard.MobileRemoteControllerState)
}
MobileRemoteControllerState::MobileRemoteControllerState(const MobileRemoteControllerState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&leftstickvertical_, &from.leftstickvertical_,
    static_cast<size_t>(reinterpret_cast<char*>(&rightstickhorizontal_) -
    reinterpret_cast<char*>(&leftstickvertical_)) + sizeof(rightstickhorizontal_));
  // @@protoc_insertion_point(copy_constructor:DJIFRProto.Standard.MobileRemoteControllerState)
}

void MobileRemoteControllerState::SharedCtor() {
  ::memset(&leftstickvertical_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightstickhorizontal_) -
      reinterpret_cast<char*>(&leftstickvertical_)) + sizeof(rightstickhorizontal_));
  _cached_size_ = 0;
}

MobileRemoteControllerState::~MobileRemoteControllerState() {
  // @@protoc_insertion_point(destructor:DJIFRProto.Standard.MobileRemoteControllerState)
  SharedDtor();
}

void MobileRemoteControllerState::SharedDtor() {
}

void MobileRemoteControllerState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MobileRemoteControllerState::descriptor() {
  ::protobuf_MobileRC_2fFRMobileRCModelProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MobileRC_2fFRMobileRCModelProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MobileRemoteControllerState& MobileRemoteControllerState::default_instance() {
  ::protobuf_MobileRC_2fFRMobileRCModelProto_2eproto::InitDefaultsMobileRemoteControllerState();
  return *internal_default_instance();
}

MobileRemoteControllerState* MobileRemoteControllerState::New(::google::protobuf::Arena* arena) const {
  MobileRemoteControllerState* n = new MobileRemoteControllerState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MobileRemoteControllerState::Clear() {
// @@protoc_insertion_point(message_clear_start:DJIFRProto.Standard.MobileRemoteControllerState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&leftstickvertical_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rightstickhorizontal_) -
      reinterpret_cast<char*>(&leftstickvertical_)) + sizeof(rightstickhorizontal_));
  _internal_metadata_.Clear();
}

bool MobileRemoteControllerState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:DJIFRProto.Standard.MobileRemoteControllerState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float leftStickVertical = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &leftstickvertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float leftStickHorizontal = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &leftstickhorizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rightStickVertical = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rightstickvertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rightStickHorizontal = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rightstickhorizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:DJIFRProto.Standard.MobileRemoteControllerState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:DJIFRProto.Standard.MobileRemoteControllerState)
  return false;
#undef DO_
}

void MobileRemoteControllerState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:DJIFRProto.Standard.MobileRemoteControllerState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float leftStickVertical = 1;
  if (this->leftstickvertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->leftstickvertical(), output);
  }

  // float leftStickHorizontal = 2;
  if (this->leftstickhorizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->leftstickhorizontal(), output);
  }

  // float rightStickVertical = 3;
  if (this->rightstickvertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->rightstickvertical(), output);
  }

  // float rightStickHorizontal = 4;
  if (this->rightstickhorizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rightstickhorizontal(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:DJIFRProto.Standard.MobileRemoteControllerState)
}

::google::protobuf::uint8* MobileRemoteControllerState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:DJIFRProto.Standard.MobileRemoteControllerState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float leftStickVertical = 1;
  if (this->leftstickvertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->leftstickvertical(), target);
  }

  // float leftStickHorizontal = 2;
  if (this->leftstickhorizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->leftstickhorizontal(), target);
  }

  // float rightStickVertical = 3;
  if (this->rightstickvertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->rightstickvertical(), target);
  }

  // float rightStickHorizontal = 4;
  if (this->rightstickhorizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rightstickhorizontal(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DJIFRProto.Standard.MobileRemoteControllerState)
  return target;
}

size_t MobileRemoteControllerState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DJIFRProto.Standard.MobileRemoteControllerState)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float leftStickVertical = 1;
  if (this->leftstickvertical() != 0) {
    total_size += 1 + 4;
  }

  // float leftStickHorizontal = 2;
  if (this->leftstickhorizontal() != 0) {
    total_size += 1 + 4;
  }

  // float rightStickVertical = 3;
  if (this->rightstickvertical() != 0) {
    total_size += 1 + 4;
  }

  // float rightStickHorizontal = 4;
  if (this->rightstickhorizontal() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MobileRemoteControllerState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:DJIFRProto.Standard.MobileRemoteControllerState)
  GOOGLE_DCHECK_NE(&from, this);
  const MobileRemoteControllerState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MobileRemoteControllerState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:DJIFRProto.Standard.MobileRemoteControllerState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:DJIFRProto.Standard.MobileRemoteControllerState)
    MergeFrom(*source);
  }
}

void MobileRemoteControllerState::MergeFrom(const MobileRemoteControllerState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:DJIFRProto.Standard.MobileRemoteControllerState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.leftstickvertical() != 0) {
    set_leftstickvertical(from.leftstickvertical());
  }
  if (from.leftstickhorizontal() != 0) {
    set_leftstickhorizontal(from.leftstickhorizontal());
  }
  if (from.rightstickvertical() != 0) {
    set_rightstickvertical(from.rightstickvertical());
  }
  if (from.rightstickhorizontal() != 0) {
    set_rightstickhorizontal(from.rightstickhorizontal());
  }
}

void MobileRemoteControllerState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:DJIFRProto.Standard.MobileRemoteControllerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MobileRemoteControllerState::CopyFrom(const MobileRemoteControllerState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DJIFRProto.Standard.MobileRemoteControllerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MobileRemoteControllerState::IsInitialized() const {
  return true;
}

void MobileRemoteControllerState::Swap(MobileRemoteControllerState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MobileRemoteControllerState::InternalSwap(MobileRemoteControllerState* other) {
  using std::swap;
  swap(leftstickvertical_, other->leftstickvertical_);
  swap(leftstickhorizontal_, other->leftstickhorizontal_);
  swap(rightstickvertical_, other->rightstickvertical_);
  swap(rightstickhorizontal_, other->rightstickhorizontal_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MobileRemoteControllerState::GetMetadata() const {
  protobuf_MobileRC_2fFRMobileRCModelProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_MobileRC_2fFRMobileRCModelProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Standard
}  // namespace DJIFRProto

// @@protoc_insertion_point(global_scope)
