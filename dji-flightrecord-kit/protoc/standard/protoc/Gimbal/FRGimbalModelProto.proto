syntax="proto3";

package DJIFRProto.Standard;

option objc_class_prefix = "DJIFRProto";

import "FRCommonModelProto.proto";

enum GimbalMode {
    // The gimbal can move independently of the aircraft's yaw. In this mode, even if
    // the aircraft yaw changes, the camera will continue pointing in the same world 
    // direction. This mode is only available for the Ronin-MX when the M600 or M600 
    // Pro landing gear is retracted.
    Free = 0;
    // The gimbal's work mode is FPV mode. In this mode, the gimbal yaw will follow the 
    // aircraft's heading, and the gimbal roll will follow the RC's roll channel value. 
    // The pitch will be available to move. 
    // This mode is only available for the Ronin-MX when the M600 landing gear is retracted.
    FPV = 1;
    // The gimbal's work mode is such that it will follow the yaw. In this mode, the 
    // gimbal yaw will be fixed, while pitch and roll will be available to move.
    YawFollow = 2;
}

message GimbalState {
    // The current gimbal attitude in degrees. Roll, pitch and yaw are 0 if the gimbal 
    // is level with the aircraft and points in the forward direction of North Pole.
    Attitude atitude = 1;
    // Returns the gimbal's roll fine-tuned value. The range for the fine-tuned value 
    // is [-10, 10] degrees. If the fine-tune value is negative, the gimbal will be fine.
    // - tuned to the specified number of degrees in the counterclockwise direction.
    float fineTunedRoll = 2;
    // Returns the gimbal's pitch fine-tuned value. The range for the fine-tuned value 
    // is [-10, 10] degrees. If the fine-tune value is negative, the gimbal will be fine.
    // - tuned to the specified number of degrees in the downward direction.
    float fineTunedPitch = 3;
    // Returns the gimbal's yaw fine-tuned value. The range for the fine-tuned value is 
    // [-10, 10] degrees. If the fine-tune value is negative, the gimbal will be fine.
    // - tuned to the specified number of degrees in the port (left) direction.
    float fineTunedYaw = 4;
    // `YES` if the gimbal's roll value is at its limit.
    bool isRollAtStop = 5;
    // `YES` if the gimbal's yaw value is at its limit.
    bool isYawAtStop = 6;
    // `YES` if the gimbal's pitch value is at its limit.
    bool isPitchAtStop = 7;
    // This function will return the angle between gimbal and the drone heading.
    double yawRelativeToAircraftHeading = 8;
    // Returns the gimbal's current work mode.
    GimbalMode mode = 9;
    /// Returns the component index. Index is zero based.
    int32 index = 10;
}