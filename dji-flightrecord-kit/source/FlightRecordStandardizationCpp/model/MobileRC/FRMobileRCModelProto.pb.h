// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FRMobileRCModelProto.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_FRMobileRCModelProto_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_FRMobileRCModelProto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021012 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_FRMobileRCModelProto_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_FRMobileRCModelProto_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_FRMobileRCModelProto_2eproto;
namespace DJIFRProto {
namespace Standard {
class MobileRemoteControllerState;
struct MobileRemoteControllerStateDefaultTypeInternal;
extern MobileRemoteControllerStateDefaultTypeInternal _MobileRemoteControllerState_default_instance_;
}  // namespace Standard
}  // namespace DJIFRProto
PROTOBUF_NAMESPACE_OPEN
template<> ::DJIFRProto::Standard::MobileRemoteControllerState* Arena::CreateMaybeMessage<::DJIFRProto::Standard::MobileRemoteControllerState>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace DJIFRProto {
namespace Standard {

// ===================================================================

class MobileRemoteControllerState final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:DJIFRProto.Standard.MobileRemoteControllerState) */ {
 public:
  inline MobileRemoteControllerState() : MobileRemoteControllerState(nullptr) {}
  ~MobileRemoteControllerState() override;
  explicit PROTOBUF_CONSTEXPR MobileRemoteControllerState(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MobileRemoteControllerState(const MobileRemoteControllerState& from);
  MobileRemoteControllerState(MobileRemoteControllerState&& from) noexcept
    : MobileRemoteControllerState() {
    *this = ::std::move(from);
  }

  inline MobileRemoteControllerState& operator=(const MobileRemoteControllerState& from) {
    CopyFrom(from);
    return *this;
  }
  inline MobileRemoteControllerState& operator=(MobileRemoteControllerState&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MobileRemoteControllerState& default_instance() {
    return *internal_default_instance();
  }
  static inline const MobileRemoteControllerState* internal_default_instance() {
    return reinterpret_cast<const MobileRemoteControllerState*>(
               &_MobileRemoteControllerState_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MobileRemoteControllerState& a, MobileRemoteControllerState& b) {
    a.Swap(&b);
  }
  inline void Swap(MobileRemoteControllerState* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MobileRemoteControllerState* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MobileRemoteControllerState* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MobileRemoteControllerState>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MobileRemoteControllerState& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const MobileRemoteControllerState& from) {
    MobileRemoteControllerState::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MobileRemoteControllerState* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "DJIFRProto.Standard.MobileRemoteControllerState";
  }
  protected:
  explicit MobileRemoteControllerState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLeftStickVerticalFieldNumber = 1,
    kLeftStickHorizontalFieldNumber = 2,
    kRightStickVerticalFieldNumber = 3,
    kRightStickHorizontalFieldNumber = 4,
  };
  // float leftStickVertical = 1;
  void clear_leftstickvertical();
  float leftstickvertical() const;
  void set_leftstickvertical(float value);
  private:
  float _internal_leftstickvertical() const;
  void _internal_set_leftstickvertical(float value);
  public:

  // float leftStickHorizontal = 2;
  void clear_leftstickhorizontal();
  float leftstickhorizontal() const;
  void set_leftstickhorizontal(float value);
  private:
  float _internal_leftstickhorizontal() const;
  void _internal_set_leftstickhorizontal(float value);
  public:

  // float rightStickVertical = 3;
  void clear_rightstickvertical();
  float rightstickvertical() const;
  void set_rightstickvertical(float value);
  private:
  float _internal_rightstickvertical() const;
  void _internal_set_rightstickvertical(float value);
  public:

  // float rightStickHorizontal = 4;
  void clear_rightstickhorizontal();
  float rightstickhorizontal() const;
  void set_rightstickhorizontal(float value);
  private:
  float _internal_rightstickhorizontal() const;
  void _internal_set_rightstickhorizontal(float value);
  public:

  // @@protoc_insertion_point(class_scope:DJIFRProto.Standard.MobileRemoteControllerState)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    float leftstickvertical_;
    float leftstickhorizontal_;
    float rightstickvertical_;
    float rightstickhorizontal_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_FRMobileRCModelProto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MobileRemoteControllerState

// float leftStickVertical = 1;
inline void MobileRemoteControllerState::clear_leftstickvertical() {
  _impl_.leftstickvertical_ = 0;
}
inline float MobileRemoteControllerState::_internal_leftstickvertical() const {
  return _impl_.leftstickvertical_;
}
inline float MobileRemoteControllerState::leftstickvertical() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.MobileRemoteControllerState.leftStickVertical)
  return _internal_leftstickvertical();
}
inline void MobileRemoteControllerState::_internal_set_leftstickvertical(float value) {
  
  _impl_.leftstickvertical_ = value;
}
inline void MobileRemoteControllerState::set_leftstickvertical(float value) {
  _internal_set_leftstickvertical(value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.MobileRemoteControllerState.leftStickVertical)
}

// float leftStickHorizontal = 2;
inline void MobileRemoteControllerState::clear_leftstickhorizontal() {
  _impl_.leftstickhorizontal_ = 0;
}
inline float MobileRemoteControllerState::_internal_leftstickhorizontal() const {
  return _impl_.leftstickhorizontal_;
}
inline float MobileRemoteControllerState::leftstickhorizontal() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.MobileRemoteControllerState.leftStickHorizontal)
  return _internal_leftstickhorizontal();
}
inline void MobileRemoteControllerState::_internal_set_leftstickhorizontal(float value) {
  
  _impl_.leftstickhorizontal_ = value;
}
inline void MobileRemoteControllerState::set_leftstickhorizontal(float value) {
  _internal_set_leftstickhorizontal(value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.MobileRemoteControllerState.leftStickHorizontal)
}

// float rightStickVertical = 3;
inline void MobileRemoteControllerState::clear_rightstickvertical() {
  _impl_.rightstickvertical_ = 0;
}
inline float MobileRemoteControllerState::_internal_rightstickvertical() const {
  return _impl_.rightstickvertical_;
}
inline float MobileRemoteControllerState::rightstickvertical() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.MobileRemoteControllerState.rightStickVertical)
  return _internal_rightstickvertical();
}
inline void MobileRemoteControllerState::_internal_set_rightstickvertical(float value) {
  
  _impl_.rightstickvertical_ = value;
}
inline void MobileRemoteControllerState::set_rightstickvertical(float value) {
  _internal_set_rightstickvertical(value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.MobileRemoteControllerState.rightStickVertical)
}

// float rightStickHorizontal = 4;
inline void MobileRemoteControllerState::clear_rightstickhorizontal() {
  _impl_.rightstickhorizontal_ = 0;
}
inline float MobileRemoteControllerState::_internal_rightstickhorizontal() const {
  return _impl_.rightstickhorizontal_;
}
inline float MobileRemoteControllerState::rightstickhorizontal() const {
  // @@protoc_insertion_point(field_get:DJIFRProto.Standard.MobileRemoteControllerState.rightStickHorizontal)
  return _internal_rightstickhorizontal();
}
inline void MobileRemoteControllerState::_internal_set_rightstickhorizontal(float value) {
  
  _impl_.rightstickhorizontal_ = value;
}
inline void MobileRemoteControllerState::set_rightstickhorizontal(float value) {
  _internal_set_rightstickhorizontal(value);
  // @@protoc_insertion_point(field_set:DJIFRProto.Standard.MobileRemoteControllerState.rightStickHorizontal)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Standard
}  // namespace DJIFRProto

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_FRMobileRCModelProto_2eproto
